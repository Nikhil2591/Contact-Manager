{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4242783.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => \r\n        contact.id !== action.payload\r\n        )\r\n      };\r\n      case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]        \r\n      };\r\n      case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n        contact.id === action.payload.id ? (contact\r\n        = action.payload) : contact)\r\n      }\r\n      default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n\r\n    ],\r\n    dispatch: action =>\r\n      this.setState(state => \r\n      reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount(){\r\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n      this.setState({contacts: res.data});\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick =  async (id, dispatch) => {\r\n  try{\r\n    await axios.delete\r\n    (`https://jsonplaceholder.typicode.com/users/${id}`);    \r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  } catch(e)\r\n  {\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  }\r\n};\r\n  render() {\r\n    const { id, name, email, phone } = \r\n    this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}{' '}\r\n          <i\r\n            onClick={() =>\r\n              this.setState({ showContactInfo: \r\n              !this.state.showContactInfo })\r\n            }\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: 'pointer', float: \r\n            'right', color: 'red' }}\r\n            onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n          />\r\n          <Link to={`contact/edit/${id}`}>\r\n            <i \r\n            className=\"fas fa-pencil-alt\"\r\n            style={{\r\n              cursor: 'pointer',\r\n              float: 'right',\r\n              color: 'black',\r\n              marginRight:'1rem'\r\n            }}\r\n            />\r\n          </Link>\r\n        </h4>\r\n        {showContactInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {email}</li>\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-4\"><span className=\"text-danger\">Contact\r\n              </span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', { \r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div \r\n      className=\"invalid-feedback\">{error}\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for Errors\r\n    if(name === ''){\r\n      this.setState({errors: { name: 'Name is required '}});\r\n      return;\r\n    }\r\n\r\n    if(email === ''){\r\n      this.setState({errors: { email: 'Email is required' }});\r\n      return;\r\n    }\r\n    \r\n    if(phone === ''){\r\n      this.setState({errors: { phone: 'Phone is required' }});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: newContact });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}              \r\n                    />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMound() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required ' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title:data.title,\r\n            body: data.body\r\n        })\r\n        );\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate...')\r\n    // }\r\n\r\n    // componentWillUodate() {\r\n    //     console.log('componentWillUpdate...')\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps...')\r\n    // }\r\n\r\n    // static getDerivedSTateFromProps(nextProps, prevState) {\r\n    //     return {\r\n    //         test: 'something'\r\n    //     };\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log('getSnapshotBeforeUpdate...')\r\n    // }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <h1>{body}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component = {Contacts} />\n              <Route exact path=\"/contact/add\" component = {AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component = {EditContact} />\n              <Route exact path=\"/about\" component = {About} />\n              <Route component={NotFound} />\n              <Route exact path=\"/test\" component = {Test} />\n\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}